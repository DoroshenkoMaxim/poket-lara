<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use Illuminate\Http\JsonResponse;
use Illuminate\Support\Facades\Log;
use App\Services\TelegramBotService;
use App\Services\AffiliateService;

class TelegramBotController extends Controller
{
    protected TelegramBotService $telegramBot;
    protected AffiliateService $affiliateService;

    public function __construct(TelegramBotService $telegramBot, AffiliateService $affiliateService)
    {
        $this->telegramBot = $telegramBot;
        $this->affiliateService = $affiliateService;
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∞—Ç—å webhook –æ—Ç Telegram
     */
    public function webhook(Request $request): JsonResponse
    {
        try {
            $update = $request->all();
            
            // –õ–æ–≥–∏—Ä—É–µ–º –≤—Ö–æ–¥—è—â–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
            Log::info('Telegram webhook received', $update);
            
            $this->processUpdate($update);
            
            return response()->json(['status' => 'ok']);
        } catch (\Exception $e) {
            Log::error('Telegram webhook error: ' . $e->getMessage(), [
                'update' => $request->all(),
                'trace' => $e->getTraceAsString()
            ]);
            
            return response()->json(['error' => 'Internal server error'], 500);
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç Telegram
     */
    private function processUpdate(array $update): void
    {
        if (isset($update['message'])) {
            $this->processMessage($update['message']);
        } elseif (isset($update['callback_query'])) {
            $this->processCallbackQuery($update['callback_query']);
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
     */
    private function processMessage(array $message): void
    {
        $chatId = $message['chat']['id'];
        $text = $message['text'] ?? '';
        $firstName = $message['from']['first_name'] ?? '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';

        switch ($text) {
            case '/start':
                $this->handleStartCommand($chatId, $firstName);
                break;
                
            case '/help':
                $this->handleHelpCommand($chatId);
                break;
                
            case '/link':
                $this->handleLinkCommand($chatId);
                break;
                
            default:
                $this->handleUnknownCommand($chatId);
                break;
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /start
     */
    private function handleStartCommand(int $chatId, string $firstName): void
    {
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫—É—é —Å—Å—ã–ª–∫—É
        $linkData = $this->affiliateService->generateAffiliateLink($chatId);
        
        $message = "üéâ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {$firstName}!</b>\n\n";
        $message .= "üéØ –≠—Ç–æ –±–æ—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∏—Ö —Å—Å—ã–ª–æ–∫ PocketOption –∏ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–æ—Ä–≥–æ–≤—ã–º —Å–∏–≥–Ω–∞–ª–∞–º.\n\n";
        $message .= "üìù <b>–í–∞—à–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:</b>\n";
        $message .= $linkData['affiliate_link'] . "\n\n";
        $message .= "‚úÖ <b>–ß—Ç–æ –¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ:</b>\n";
        $message .= "1Ô∏è‚É£ –ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –≤—ã—à–µ\n";
        $message .= "2Ô∏è‚É£ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ PocketOption\n";
        $message .= "3Ô∏è‚É£ –ü–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ —Å–∏–≥–Ω–∞–ª–∞–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏\n\n";
        $message .= "üí∞ –ë–æ–Ω—É—Å –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: <b>WELCOME50</b>\n";
        $message .= "‚è∞ –î–æ—Å—Ç—É–ø –∫ —Å–∏–≥–Ω–∞–ª–∞–º: <b>24 —á–∞—Å–∞</b> –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏";

        // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏
        $keyboard = $this->telegramBot->createInlineKeyboard([
            [
                ['text' => 'üöÄ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è', 'url' => $linkData['affiliate_link']]
            ],
            [
                ['text' => 'üîó –ü–æ–ª—É—á–∏—Ç—å –Ω–æ–≤—É—é —Å—Å—ã–ª–∫—É', 'callback_data' => 'new_link'],
                ['text' => '‚ùì –ü–æ–º–æ—â—å', 'callback_data' => 'help']
            ]
        ]);

        $this->telegramBot->sendMessage($chatId, $message, $keyboard);
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /help
     */
    private function handleHelpCommand(int $chatId): void
    {
        $message = "‚ùì <b>–ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É</b>\n\n";
        $message .= "ü§ñ <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n";
        $message .= "/start - –ü–æ–ª—É—á–∏—Ç—å –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫—É—é —Å—Å—ã–ª–∫—É\n";
        $message .= "/link - –ü–æ–ª—É—á–∏—Ç—å –Ω–æ–≤—É—é —Å—Å—ã–ª–∫—É\n";
        $message .= "/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞\n\n";
        $message .= "üìã <b>–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:</b>\n";
        $message .= "1Ô∏è‚É£ –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ PocketOption\n";
        $message .= "2Ô∏è‚É£ –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç–µ—Å—å –ø–æ —ç—Ç–æ–π —Å—Å—ã–ª–∫–µ\n";
        $message .= "3Ô∏è‚É£ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–ª—É—á–∞–µ—Ç–µ –¥–æ—Å—Ç—É–ø –∫ —Ç–æ—Ä–≥–æ–≤—ã–º —Å–∏–≥–Ω–∞–ª–∞–º –Ω–∞ 24 —á–∞—Å–∞\n";
        $message .= "4Ô∏è‚É£ –ü–æ—Å–ª–µ –∏—Å—Ç–µ—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ –º–æ–∂–µ—Ç–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è —á–µ—Ä–µ–∑ –≤–∏–¥–∂–µ—Ç Telegram\n\n";
        $message .= "üíé <b>–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:</b>\n";
        $message .= "‚Ä¢ –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —Ç–æ—Ä–≥–æ–≤—ã–µ —Å–∏–≥–Ω–∞–ª—ã\n";
        $message .= "‚Ä¢ –ë–æ–Ω—É—Å WELCOME50 –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏\n";
        $message .= "‚Ä¢ –ö—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞";

        $keyboard = $this->telegramBot->createInlineKeyboard([
            [
                ['text' => 'üöÄ –ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É', 'callback_data' => 'new_link']
            ]
        ]);

        $this->telegramBot->sendMessage($chatId, $message, $keyboard);
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /link
     */
    private function handleLinkCommand(int $chatId): void
    {
        $linkData = $this->affiliateService->generateAffiliateLink($chatId);
        
        $message = "üîó <b>–ù–æ–≤–∞—è –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∞—è —Å—Å—ã–ª–∫–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞!</b>\n\n";
        $message .= $linkData['affiliate_link'] . "\n\n";
        $message .= "üéØ ID —Å—Å—ã–ª–∫–∏: <code>{$linkData['click_id']}</code>\n";
        $message .= "üí∞ –ë–æ–Ω—É—Å: <b>WELCOME50</b>";

        $keyboard = $this->telegramBot->createInlineKeyboard([
            [
                ['text' => 'üöÄ –ü–µ—Ä–µ–π—Ç–∏ –∫ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏', 'url' => $linkData['affiliate_link']]
            ]
        ]);

        $this->telegramBot->sendMessage($chatId, $message, $keyboard);
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—É—é –∫–æ–º–∞–Ω–¥—É
     */
    private function handleUnknownCommand(int $chatId): void
    {
        $message = "ü§î –Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.\n\n";
        $message .= "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–æ–π —Å—Å—ã–ª–∫–∏ –∏–ª–∏ /help –¥–ª—è –ø–æ–º–æ—â–∏.";

        $keyboard = $this->telegramBot->createInlineKeyboard([
            [
                ['text' => 'üöÄ –ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É', 'callback_data' => 'new_link'],
                ['text' => '‚ùì –ü–æ–º–æ—â—å', 'callback_data' => 'help']
            ]
        ]);

        $this->telegramBot->sendMessage($chatId, $message, $keyboard);
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∞—Ç—å callback query
     */
    private function processCallbackQuery(array $callbackQuery): void
    {
        $chatId = $callbackQuery['message']['chat']['id'];
        $data = $callbackQuery['data'];

        switch ($data) {
            case 'new_link':
                $this->handleLinkCommand($chatId);
                break;
                
            case 'help':
                $this->handleHelpCommand($chatId);
                break;
        }
    }

    /**
     * –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å webhook
     */
    public function setWebhook(): JsonResponse
    {
        $webhookUrl = url('/telegram/webhook');
        $result = $this->telegramBot->setWebhook($webhookUrl);
        
        if ($result && $result['ok']) {
            return response()->json([
                'success' => true,
                'message' => 'Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ',
                'url' => $webhookUrl
            ]);
        } else {
            return response()->json([
                'success' => false,
                'message' => '–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook',
                'result' => $result
            ], 500);
        }
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
     */
    public function getBotInfo(): JsonResponse
    {
        $botInfo = $this->telegramBot->getMe();
        $webhookInfo = $this->telegramBot->getWebhookInfo();
        
        return response()->json([
            'bot_info' => $botInfo,
            'webhook_info' => $webhookInfo
        ]);
    }
} 