<?php

require_once __DIR__ . '/../autoload.php';

use App\Database;
use App\TelegramBot;

// –†–æ—É—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ—Å—Ç–±–µ–∫–æ–≤ –æ—Ç PocketPartners
// GET /postback.php —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏

header('Content-Type: application/json; charset=utf-8');

try {
    // –õ–æ–≥–∏—Ä—É–µ–º –≤—Ö–æ–¥—è—â–∏–π –∑–∞–ø—Ä–æ—Å –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    $logData = [
        'method' => $_SERVER['REQUEST_METHOD'],
        'headers' => getallheaders(),
        'get' => $_GET,
        'post' => $_POST,
        'query_string' => $_SERVER['QUERY_STRING'] ?? '',
        'timestamp' => date('Y-m-d H:i:s')
    ];
    
    file_put_contents(__DIR__ . '/../logs/postback.log', json_encode($logData) . "\n", FILE_APPEND | LOCK_EX);
    
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ GET –∑–∞–ø—Ä–æ—Å–∞ (–Ω–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç —Å –º–∞–∫—Ä–æ—Å–∞–º–∏)
    $clickId = $_GET['click_id'] ?? null;
    $traderId = $_GET['trader_id'] ?? null;
    $country = $_GET['country'] ?? null;
    $promo = $_GET['promo'] ?? $_GET['code'] ?? null; // code –∏–ª–∏ promo
    $deviceType = $_GET['device_type'] ?? null;
    $osVersion = $_GET['os_version'] ?? null;
    $browser = $_GET['browser'] ?? null;
    $linkType = $_GET['link_type'] ?? null;
    $dateTime = $_GET['date_time'] ?? null;
    $siteId = $_GET['site_id'] ?? null;
    $subId1 = $_GET['sub_id1'] ?? null;
    $cid = $_GET['cid'] ?? null;
    $event = 'reg'; // –í—Å–µ–≥–¥–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –¥–ª—è GET –ø–æ—Å—Ç–±–µ–∫–æ–≤
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    if (!$clickId || !$traderId) {
        http_response_code(400);
        echo json_encode(['error' => 'click_id and trader_id are required']);
        exit;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ —Å–æ–±—ã—Ç–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    if ($event !== 'reg') {
        // –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è, –ø—Ä–æ—Å—Ç–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ
        http_response_code(200);
        echo json_encode(['success' => true, 'message' => 'Event received but not processed']);
        exit;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–∞–∫–æ–π click_id –≤ –Ω–∞—à–∏—Ö affiliate_links
    $linkExists = Database::findAffiliateLink($clickId);
    
    if (!$linkExists) {
        http_response_code(404);
        echo json_encode(['error' => 'click_id not found in our system']);
        exit;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –±—ã–ª–∞ –ª–∏ —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ —ç—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
    $existingRegistration = Database::findRegistration($clickId, $traderId);
    
    if ($existingRegistration) {
        http_response_code(200);
        echo json_encode(['success' => true, 'message' => 'Registration already processed']);
        exit;
    }
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é —Å–æ –≤—Å–µ–º–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    $additionalData = [
        'country' => $country,
        'promo' => $promo,
        'device_type' => $deviceType,
        'os_version' => $osVersion,
        'browser' => $browser,
        'link_type' => $linkType,
        'site_id' => $siteId,
        'sub_id1' => $subId1,  
        'cid' => $cid,
        'date_time' => $dateTime
    ];
    
    $success = Database::insertRegistration($clickId, $traderId, $additionalData);
    
    if (!$success) {
        throw new Exception('Failed to save registration');
    }
    
    // –ü–æ–ª—É—á–∞–µ–º telegram_id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω
    $telegramId = $linkExists['telegram_id'];
    $tempToken = Database::createTempToken($telegramId, $clickId, $traderId);
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ —Å–∏–≥–Ω–∞–ª—ã —Å –≤—Ä–µ–º–µ–Ω–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º
    $signalsUrl = "https://" . $_SERVER['HTTP_HOST'] . "/signals.php?token=" . $tempToken;
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å—Ä–∞–∑—É —á–µ—Ä–µ–∑ Telegram Bot
    try {
        $token = '7963957548:AAFC-Z10-eFLWM5ExWErzZATVG8kZZfHqiM';
        $bot = new TelegramBot($token);
        
        $message = "üéâ <b>–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å —É—Å–ø–µ—à–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π!</b>\n\n";
        $message .= "‚úÖ –í–∞—à –∞–∫–∫–∞—É–Ω—Ç PocketOption –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω\n";
        $message .= "üéØ –¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Ç–æ—Ä–≥–æ–≤—ã–º —Å–∏–≥–Ω–∞–ª–∞–º!\n\n";
        $message .= "üîó –ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–∏–≥–Ω–∞–ª–æ–≤:\n";
        $message .= $signalsUrl . "\n\n";
        $message .= "‚è∞ –°—Å—ã–ª–∫–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ 24 —á–∞—Å–∞\n";
        $message .= "üí∞ –£–¥–∞—á–Ω–æ–π —Ç–æ—Ä–≥–æ–≤–ª–∏!";
        
        // –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —Å–∏–≥–Ω–∞–ª–∞–º
        $keyboard = [
            'inline_keyboard' => [
                [
                    ['text' => 'üìä –ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–∏–≥–Ω–∞–ª–∞–º', 'url' => $signalsUrl]
                ],
                [
                    ['text' => 'ü§ñ –û—Ç–∫—Ä—ã—Ç—å –±–æ—Ç–∞', 'url' => 'https://t.me/signallangis_bot']
                ]
            ]
        ];
        
        $result = $bot->sendMessage($telegramId, $message, $keyboard);
        
        // –õ–æ–≥–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏
        file_put_contents(__DIR__ . '/../logs/instant_notifications.log', 
            date('Y-m-d H:i:s') . " - Sent to $telegramId: " . 
            ($result && $result['ok'] ? 'SUCCESS' : 'FAILED') . "\n", FILE_APPEND | LOCK_EX);
        
        // –ï—Å–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å, –¥–æ–±–∞–≤–ª—è–µ–º –≤ –æ—á–µ—Ä–µ–¥—å –∫–∞–∫ fallback
        if (!$result || !$result['ok']) {
            Database::addNotificationQueue($telegramId, $message, [
                'click_id' => $clickId,
                'trader_id' => $traderId,
                'signals_url' => $signalsUrl,
                'temp_token' => $tempToken
            ]);
        }
        
    } catch (Exception $e) {
        // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –¥–æ–±–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –æ—á–µ—Ä–µ–¥—å
        error_log('Instant notification failed: ' . $e->getMessage());
        Database::addNotificationQueue($telegramId, $message, [
            'click_id' => $clickId,
            'trader_id' => $traderId,
            'signals_url' => $signalsUrl,
            'temp_token' => $tempToken
        ]);
    }
    
    http_response_code(200);
    echo json_encode([
        'success' => true,
        'message' => 'Registration processed successfully',
        'click_id' => $clickId,
        'trader_id' => $traderId,
        'signals_url' => $signalsUrl
    ]);
    
} catch (Exception $e) {
    http_response_code(500);
    echo json_encode(['error' => 'Internal server error: ' . $e->getMessage()]);
} 