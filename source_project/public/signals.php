<?php

require_once __DIR__ . '/../autoload.php';

use App\Database;

// –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å —Å–∏–≥–Ω–∞–ª–∞–º–∏
// –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –¥–æ—Å—Ç—É–ø —á–µ—Ä–µ–∑:
// 1. –í—Ä–µ–º–µ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω: /signals.php?token=xxx
// 2. –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: /signals.php?click_id=xxx&trader_id=yyy (–±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏)

$token = $_GET['token'] ?? null;
$clickId = $_GET['click_id'] ?? null;
$traderId = $_GET['trader_id'] ?? null;

$isVerified = false;
$userInfo = null;
$accessMethod = 'none';

try {
    // –°–ø–æ—Å–æ–± 1: –î–æ—Å—Ç—É–ø —á–µ—Ä–µ–∑ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–π)
    if ($token) {
        $tokenData = Database::validateTempToken($token);
        if ($tokenData) {
            $isVerified = true;
            $accessMethod = 'token';
            $clickId = $tokenData['click_id'];
            $traderId = $tokenData['trader_id'];
            
            // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
            $registration = Database::getRegistrationWithTelegram($clickId, $traderId);
            if ($registration) {
                $userInfo = $registration;
            }
        }
    }
    
    // –°–ø–æ—Å–æ–± 2: –î–æ—Å—Ç—É–ø —á–µ—Ä–µ–∑ click_id + trader_id (–±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏)
    elseif ($clickId && $traderId) {
        $registration = Database::getRegistrationWithTelegram($clickId, $traderId);
        
        if ($registration) {
            $isVerified = true;
            $accessMethod = 'direct_params';
            $userInfo = $registration;
        }
    }
    
    // –°–ø–æ—Å–æ–± 3: –ï—Å–ª–∏ –Ω–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é
    else {
        $accessMethod = 'no_access';
    }
    
} catch (Exception $e) {
    error_log('Signals page error: ' . $e->getMessage());
}

?>
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–¢–æ—Ä–≥–æ–≤—ã–µ –°–∏–≥–Ω–∞–ª—ã - PocketOption</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            color: #333;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }
        
        .header {
            text-align: center;
            color: white;
            margin-bottom: 30px;
        }
        
        .header h1 {
            font-size: 3rem;
            margin-bottom: 10px;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
        }
        
        .status-card {
            background: white;
            border-radius: 15px;
            padding: 30px;
            margin-bottom: 30px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.2);
        }
        
        .verified {
            border-left: 5px solid #4CAF50;
        }
        
        .not-verified {
            border-left: 5px solid #f44336;
        }
        
        .signals-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }
        
        .signal-card {
            background: white;
            border-radius: 10px;
            padding: 20px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            transition: transform 0.3s ease;
        }
        
        .signal-card:hover {
            transform: translateY(-5px);
        }
        
        .signal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
        }
        
        .currency-pair {
            font-size: 1.2rem;
            font-weight: bold;
            color: #667eea;
        }
        
        .signal-type.call {
            background: #4CAF50;
            color: white;
            padding: 5px 10px;
            border-radius: 20px;
            font-size: 0.9rem;
        }
        
        .signal-type.put {
            background: #f44336;
            color: white;
            padding: 5px 10px;
            border-radius: 20px;
            font-size: 0.9rem;
        }
        
        .signal-details {
            font-size: 0.9rem;
            color: #666;
        }
        
        .generate-link-btn {
            display: inline-block;
            background: linear-gradient(45deg, #667eea, #764ba2);
            color: white;
            padding: 15px 30px;
            text-decoration: none;
            border-radius: 25px;
            font-weight: bold;
            transition: transform 0.3s ease;
            margin-top: 20px;
        }
        
        .generate-link-btn:hover {
            transform: scale(1.05);
        }
        
        .user-info {
            background: #f8f9fa;
            padding: 15px;
            border-radius: 8px;
            margin-top: 15px;
        }
        
        .error-message {
            background: #ffebee;
            color: #c62828;
            padding: 15px;
            border-radius: 8px;
            margin-top: 15px;
        }
        
        .access-info {
            background: #e8f5e8;
            color: #2e7d32;
            padding: 15px;
            border-radius: 8px;
            margin-top: 15px;
            border-left: 4px solid #4caf50;
        }
        
        .live-time {
            font-size: 1.2rem;
            font-weight: bold;
            color: white;
            text-align: center;
            margin-bottom: 20px;
            padding: 10px;
            background: rgba(255,255,255,0.1);
            border-radius: 10px;
            animation: pulse 2s infinite;
        }
        
        @keyframes pulse {
            0% { opacity: 1; }
            50% { opacity: 0.7; }
            100% { opacity: 1; }
        }
        
        .signal-progress {
            width: 100%;
            height: 20px;
            background: #f0f0f0;
            border-radius: 10px;
            overflow: hidden;
            margin: 10px 0;
            position: relative;
        }
        
        .progress-bar {
            height: 100%;
            background: linear-gradient(90deg, #4CAF50, #66BB6A);
            border-radius: 10px;
            transition: width 1s linear;
            position: relative;
        }
        
        .progress-bar.call {
            background: linear-gradient(90deg, #4CAF50, #66BB6A);
        }
        
        .progress-bar.put {
            background: linear-gradient(90deg, #f44336, #ef5350);
        }
        
        .progress-text {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            font-size: 0.8rem;
            font-weight: bold;
            color: white;
            text-shadow: 1px 1px 2px rgba(0,0,0,0.5);
        }
        
        .signal-card.active {
            box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);
            border: 2px solid #667eea;
        }
        
        .signal-card.expired {
            opacity: 0.6;
            background: #f5f5f5;
        }
        
        .entry-time {
            font-size: 1.1rem;
            font-weight: bold;
            color: #667eea;
        }
        
        .probability {
            font-size: 1.2rem;
            font-weight: bold;
        }
        
        .probability.high {
            color: #4CAF50;
        }
        
        .probability.medium {
            color: #FF9800;
        }
        
        .probability.low {
            color: #f44336;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üéØ –¢–æ—Ä–≥–æ–≤—ã–µ –°–∏–≥–Ω–∞–ª—ã</h1>
            <p>–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Å–∏–≥–Ω–∞–ª—ã –¥–ª—è PocketOption</p>
        </div>

        <?php if ($isVerified): ?>
            <div class="status-card verified">
                <h2>‚úÖ –î–æ—Å—Ç—É–ø –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω</h2>
                <p>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í–∞—à –∞–∫–∫–∞—É–Ω—Ç —É—Å–ø–µ—à–Ω–æ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω.</p>
                
                <?php if ($accessMethod === 'token'): ?>
                    <div class="access-info">
                        <p><strong>üîê –î–æ—Å—Ç—É–ø –ø–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–º—É —Ç–æ–∫–µ–Ω—É</strong></p>
                        <p>–°—Å—ã–ª–∫–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤</p>
                    </div>
                <?php elseif ($accessMethod === 'direct_params'): ?>
                    <div class="access-info">
                        <p><strong>üîó –ü—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø –ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º</strong></p>
                        <p>–î–æ—Å—Ç—É–ø –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω —á–µ—Ä–µ–∑ click_id –∏ trader_id</p>
                    </div>
                <?php endif; ?>
                
                <?php if ($userInfo): ?>
                    <div class="user-info">
                        <h3>üë§ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:</h3>
                        <p><strong>Telegram ID:</strong> <?= htmlspecialchars($userInfo['telegram_id']) ?></p>
                        <p><strong>Trader ID:</strong> <?= htmlspecialchars($userInfo['trader_id']) ?></p>
                        <p><strong>–°—Ç—Ä–∞–Ω–∞:</strong> <?= htmlspecialchars($userInfo['country'] ?: '–ù–µ —É–∫–∞–∑–∞–Ω–∞') ?></p>
                        <p><strong>–ü—Ä–æ–º–æ–∫–æ–¥:</strong> <?= htmlspecialchars($userInfo['promo'] ?: '–ù–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω') ?></p>
                        <p><strong>–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ:</strong> <?= htmlspecialchars($userInfo['device_type'] ?: '–ù–µ —É–∫–∞–∑–∞–Ω–æ') ?></p>
                        <p><strong>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è:</strong> <?= htmlspecialchars($userInfo['created_at']) ?></p>
                    </div>
                <?php endif; ?>
            </div>

            <div class="live-time" id="live-time">
                ‚è∞ –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: <span id="current-time"></span>
            </div>

            <div class="signals-grid" id="signals-grid">
                <!-- –°–∏–≥–Ω–∞–ª—ã –±—É–¥—É—Ç –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ JavaScript -->
            </div>

        <?php elseif ($accessMethod === 'no_access'): ?>
            <div class="status-card not-verified">
                <h2>üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</h2>
                <p>–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–∏–≥–Ω–∞–ª–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É.</p>
                
                <div class="error-message">
                    <h3>üîó –ù–µ–æ–±—Ö–æ–¥–∏–º–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —á–µ—Ä–µ–∑ –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫—É—é —Å—Å—ã–ª–∫—É</h3>
                    <p>–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–∏–≥–Ω–∞–ª–∞–º:</p>
                    <ol style="margin-left: 20px; margin-top: 10px;">
                        <li>–ü–æ–ª—É—á–∏—Ç–µ –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫—É—é —Å—Å—ã–ª–∫—É –≤ –Ω–∞—à–µ–º –±–æ—Ç–µ @signallangis_bot</li>
                        <li>–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ PocketOption –ø–æ —ç—Ç–æ–π —Å—Å—ã–ª–∫–µ</li>
                        <li>–ü–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Å–∏–≥–Ω–∞–ª—ã</li>
                    </ol>
                </div>
                
                <a href="https://t.me/signallangis_bot" class="generate-link-btn" target="_blank">
                    ü§ñ –ü–µ—Ä–µ–π—Ç–∏ –∫ –±–æ—Ç—É
                </a>
            </div>
        
        <?php else: ?>
            <div class="status-card not-verified">
                <h2>‚ùå –î–æ—Å—Ç—É–ø –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω</h2>
                <p>–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–∏–≥–Ω–∞–ª–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è —á–µ—Ä–µ–∑ –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫—É—é —Å—Å—ã–ª–∫—É.</p>
                
                <div class="error-message">
                    <h3>üîó –ù–µ—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏</h3>
                    <p>–ú—ã –Ω–µ —Å–º–æ–≥–ª–∏ –Ω–∞–π—Ç–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—É—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏–ª–∏ —Ç–æ–∫–µ–Ω –∏—Å—Ç–µ–∫.</p>
                </div>
                
                <a href="https://t.me/signallangis_bot" class="generate-link-btn" target="_blank">
                    üöÄ –ü–æ–ª—É—á–∏—Ç—å –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫—É—é —Å—Å—ã–ª–∫—É –≤ –±–æ—Ç–µ
                </a>
            </div>
        <?php endif; ?>
    </div>

    <script>
        <?php if ($isVerified): ?>
        
        // –ú–∞—Å—Å–∏–≤ –≤–∞–ª—é—Ç–Ω—ã—Ö –ø–∞—Ä
        const currencyPairs = [
            'EUR/USD', 'GBP/USD', 'USD/JPY', 'AUD/USD', 'USD/CAD', 
            'EUR/GBP', 'USD/CHF', 'NZD/USD', 'EUR/JPY', 'GBP/JPY'
        ];
        
        // –ú–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–∏–≥–Ω–∞–ª–æ–≤
        let activeSignals = [];
        
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏
        function updateTime() {
            const now = new Date();
            const timeString = now.toLocaleTimeString('ru-RU');
            document.getElementById('current-time').textContent = timeString;
        }
        
        // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Å–∏–≥–Ω–∞–ª–∞
        function generateSignal() {
            const types = ['call', 'put'];
            const expirations = [1, 3, 5];
            const entryDelays = [1, 2, 3, 5, 8];
            
            return {
                id: Date.now() + Math.random(),
                pair: currencyPairs[Math.floor(Math.random() * currencyPairs.length)],
                type: types[Math.floor(Math.random() * types.length)],
                entryTime: new Date(Date.now() + entryDelays[Math.floor(Math.random() * entryDelays.length)] * 60000),
                expiration: expirations[Math.floor(Math.random() * expirations.length)],
                probability: Math.floor(Math.random() * 30) + 70, // 70-99%
                startTime: Date.now(),
                duration: 180000 // 3 –º–∏–Ω—É—Ç—ã –∂–∏–∑–Ω–∏ —Å–∏–≥–Ω–∞–ª–∞
            };
        }
        
        // –°–æ–∑–¥–∞–Ω–∏–µ HTML –¥–ª—è —Å–∏–≥–Ω–∞–ª–∞
        function createSignalHTML(signal) {
            const probabilityClass = signal.probability >= 85 ? 'high' : 
                                   signal.probability >= 75 ? 'medium' : 'low';
            
            return `
                <div class="signal-card active" data-signal-id="${signal.id}">
                    <div class="signal-header">
                        <span class="currency-pair">${signal.pair}</span>
                        <span class="signal-type ${signal.type}">${signal.type.toUpperCase()}</span>
                    </div>
                    <div class="signal-details">
                        <p><strong>–í—Ä–µ–º—è –≤—Ö–æ–¥–∞:</strong> <span class="entry-time">${signal.entryTime.toLocaleTimeString('ru-RU', {hour: '2-digit', minute: '2-digit'})}</span></p>
                        <p><strong>–≠–∫—Å–ø–∏—Ä–∞—Ü–∏—è:</strong> ${signal.expiration} –º–∏–Ω</p>
                        <p><strong>–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å:</strong> <span class="probability ${probabilityClass}">${signal.probability}%</span></p>
                        <div class="signal-progress">
                            <div class="progress-bar ${signal.type}" style="width: 100%">
                                <div class="progress-text">100%</div>
                            </div>
                        </div>
                    </div>
                </div>
            `;
        }
        
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞
        function updateProgressBar(signal) {
            const elapsed = Date.now() - signal.startTime;
            const progress = Math.max(0, 100 - (elapsed / signal.duration) * 100);
            
            const signalElement = document.querySelector(`[data-signal-id="${signal.id}"]`);
            if (signalElement) {
                const progressBar = signalElement.querySelector('.progress-bar');
                const progressText = signalElement.querySelector('.progress-text');
                
                progressBar.style.width = progress + '%';
                progressText.textContent = Math.round(progress) + '%';
                
                // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å expired –µ—Å–ª–∏ –≤—Ä–µ–º—è –∏—Å—Ç–µ–∫–ª–æ
                if (progress <= 0) {
                    signalElement.classList.remove('active');
                    signalElement.classList.add('expired');
                }
            }
        }
        
        // –†–µ–Ω–¥–µ—Ä –≤—Å–µ—Ö —Å–∏–≥–Ω–∞–ª–æ–≤
        function renderSignals() {
            const container = document.getElementById('signals-grid');
            container.innerHTML = activeSignals.map(createSignalHTML).join('');
        }
        
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–∏–≥–Ω–∞–ª–æ–≤
        function updateSignals() {
            const now = Date.now();
            
            // –£–¥–∞–ª—è–µ–º –∏—Å—Ç–µ–∫—à–∏–µ —Å–∏–≥–Ω–∞–ª—ã
            activeSignals = activeSignals.filter(signal => 
                now - signal.startTime < signal.duration + 5000
            );
            
            // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ —Å–∏–≥–Ω–∞–ª—ã –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
            while (activeSignals.length < 4) {
                activeSignals.push(generateSignal());
            }
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä—ã
            activeSignals.forEach(updateProgressBar);
            
            // –ü–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä–∏–≤–∞–µ–º –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
            if (activeSignals.filter(s => Date.now() - s.startTime < 1000).length > 0) {
                renderSignals();
            }
        }
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
        function init() {
            // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ —Å–∏–≥–Ω–∞–ª—ã
            for (let i = 0; i < 4; i++) {
                const signal = generateSignal();
                signal.startTime = Date.now() - Math.random() * 120000; // –°–ª—É—á–∞–π–Ω–æ–µ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞
                activeSignals.push(signal);
            }
            
            renderSignals();
            
            // –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä—ã
            updateTime();
            setInterval(updateTime, 1000);
            setInterval(updateSignals, 1000);
            
            // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ —Å–∏–≥–Ω–∞–ª—ã –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏
            setInterval(() => {
                if (Math.random() < 0.3 && activeSignals.length < 6) { // 30% —à–∞–Ω—Å –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
                    activeSignals.push(generateSignal());
                    renderSignals();
                }
            }, 5000);
        }
        
        // –ó–∞–ø—É—Å–∫ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        document.addEventListener('DOMContentLoaded', init);
        
        <?php endif; ?>
    </script>
</body>
</html> 