<?php

require_once __DIR__ . '/../autoload.php';

use App\Database;

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è UTF-8
header('Content-Type: text/html; charset=utf-8');

?>
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–¢–µ—Å—Ç –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–æ–π —Å–∏—Å—Ç–µ–º—ã</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
        }
        
        .container {
            max-width: 1000px;
            margin: 0 auto;
            background: white;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.2);
            overflow: hidden;
        }
        
        .header {
            background: linear-gradient(45deg, #667eea, #764ba2);
            color: white;
            padding: 30px;
            text-align: center;
        }
        
        .header h1 {
            font-size: 2.5rem;
            margin-bottom: 10px;
        }
        
        .content {
            padding: 30px;
        }
        
        .test-section {
            margin-bottom: 30px;
            padding: 20px;
            border-radius: 10px;
            background: #f8f9fa;
        }
        
        .test-title {
            font-size: 1.2rem;
            font-weight: bold;
            color: #333;
            margin-bottom: 15px;
            display: flex;
            align-items: center;
            gap: 10px;
        }
        
        .success {
            color: #28a745;
        }
        
        .error {
            color: #dc3545;
        }
        
        .info {
            background: #e3f2fd;
            padding: 15px;
            border-radius: 8px;
            margin: 10px 0;
            border-left: 4px solid #2196f3;
        }
        
        .json-display {
            background: #1e1e1e;
            color: #f8f8f2;
            padding: 20px;
            border-radius: 8px;
            font-family: 'Courier New', monospace;
            overflow-x: auto;
            white-space: pre-wrap;
            margin: 15px 0;
        }
        
        .links {
            background: #fff3cd;
            padding: 20px;
            border-radius: 8px;
            border-left: 4px solid #ffc107;
        }
        
        .links a {
            display: block;
            margin: 5px 0;
            color: #007bff;
            text-decoration: none;
        }
        
        .links a:hover {
            text-decoration: underline;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üß™ –¢–µ—Å—Ç –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–æ–π —Å–∏—Å—Ç–µ–º—ã</h1>
            <p>–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã —Å JSON —Ñ–∞–π–ª–∞–º–∏</p>
        </div>
        
        <div class="content">
            <?php
            
            try {
                // –ü–æ–ª—É—á–∞–µ–º telegram_id –∏–∑ GET –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π
                $telegramId = isset($_GET['telegram_id']) ? (int)$_GET['telegram_id'] : 123456789;
                
                // –¢–µ—Å—Ç 1: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–æ–π —Å—Å—ã–ª–∫–∏
                echo '<div class="test-section">';
                echo '<div class="test-title">1Ô∏è‚É£ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–æ–π —Å—Å—ã–ª–∫–∏</div>';
                
                $clickId = uniqid('click_' . $telegramId . '_', true);
                
                $success = Database::insertAffiliateLink($clickId, $telegramId);
                
                if ($success) {
                    echo '<div class="success">‚úÖ –ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∞—è —Å—Å—ã–ª–∫–∞ —Å–æ–∑–¥–∞–Ω–∞</div>';
                    echo '<div class="info"><strong>Click ID:</strong> ' . htmlspecialchars($clickId) . '</div>';
                } else {
                    echo '<div class="error">‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å—Å—ã–ª–∫–∏</div>';
                }
                echo '</div>';
                
                // –¢–µ—Å—Ç 2: –ü–æ–∏—Å–∫ –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–æ–π —Å—Å—ã–ª–∫–∏
                echo '<div class="test-section">';
                echo '<div class="test-title">2Ô∏è‚É£ –ü–æ–∏—Å–∫ –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–æ–π —Å—Å—ã–ª–∫–∏</div>';
                
                $found = Database::findAffiliateLink($clickId);
                if ($found) {
                    echo '<div class="success">‚úÖ –°—Å—ã–ª–∫–∞ –Ω–∞–π–¥–µ–Ω–∞</div>';
                    echo '<div class="info"><strong>Telegram ID:</strong> ' . htmlspecialchars($found['telegram_id']) . '</div>';
                } else {
                    echo '<div class="error">‚ùå –°—Å—ã–ª–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞</div>';
                }
                echo '</div>';
                
                // –¢–µ—Å—Ç 3: –ò–º–∏—Ç–∞—Ü–∏—è –ø–æ—Å—Ç–±–µ–∫–∞ - —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
                echo '<div class="test-section">';
                echo '<div class="test-title">3Ô∏è‚É£ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ (–∏–º–∏—Ç–∞—Ü–∏—è –ø–æ—Å—Ç–±–µ–∫–∞)</div>';
                
                $traderId = 'TR_' . rand(10000000, 99999999);
                $country = 'RU';
                $promo = 'WELCOME50';
                $deviceType = 'desktop';
                
                $additionalData = [
                    'country' => $country,
                    'promo' => $promo,
                    'device_type' => $deviceType
                ];
                $success = Database::insertRegistration($clickId, $traderId, $additionalData);
                
                if ($success) {
                    echo '<div class="success">‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞</div>';
                    echo '<div class="info"><strong>Trader ID:</strong> ' . htmlspecialchars($traderId) . '</div>';
                    echo '<div class="info"><strong>–°—Ç—Ä–∞–Ω–∞:</strong> ' . htmlspecialchars($country) . '</div>';
                    echo '<div class="info"><strong>–ü—Ä–æ–º–æ–∫–æ–¥:</strong> ' . htmlspecialchars($promo) . '</div>';
                } else {
                    echo '<div class="error">‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏</div>';
                }
                echo '</div>';
                
                // –¢–µ—Å—Ç 4: –ü–æ–∏—Å–∫ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
                echo '<div class="test-section">';
                echo '<div class="test-title">4Ô∏è‚É£ –ü–æ–∏—Å–∫ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏</div>';
                
                $registration = Database::findRegistration($clickId, $traderId);
                if ($registration) {
                    echo '<div class="success">‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞–π–¥–µ–Ω–∞</div>';
                    echo '<div class="info"><strong>–í—Ä–µ–º—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:</strong> ' . htmlspecialchars($registration['created_at']) . '</div>';
                } else {
                    echo '<div class="error">‚ùå –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞</div>';
                }
                echo '</div>';
                
                // –¢–µ—Å—Ç 5: –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
                echo '<div class="test-section">';
                echo '<div class="test-title">5Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏</div>';
                
                $fullInfo = Database::getRegistrationWithTelegram($clickId, $traderId);
                if ($fullInfo) {
                    echo '<div class="success">‚úÖ –ü–æ–ª–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∞</div>';
                    echo '<div class="info">';
                    echo '<strong>üì± Telegram ID:</strong> ' . htmlspecialchars($fullInfo['telegram_id']) . '<br>';
                    echo '<strong>üë§ Trader ID:</strong> ' . htmlspecialchars($fullInfo['trader_id']) . '<br>';
                    echo '<strong>üåç –°—Ç—Ä–∞–Ω–∞:</strong> ' . htmlspecialchars($fullInfo['country']) . '<br>';
                    echo '<strong>üéÅ –ü—Ä–æ–º–æ–∫–æ–¥:</strong> ' . htmlspecialchars($fullInfo['promo']) . '<br>';
                    echo '<strong>üíª –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ:</strong> ' . htmlspecialchars($fullInfo['device_type']) . '<br>';
                    echo '</div>';
                } else {
                    echo '<div class="error">‚ùå –ü–æ–ª–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞</div>';
                }
                echo '</div>';
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ JSON —Ñ–∞–π–ª–æ–≤
                echo '<div class="test-section">';
                echo '<div class="test-title">üìÅ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ JSON —Ñ–∞–π–ª–æ–≤</div>';
                
                $affiliateLinksFile = __DIR__ . '/../data/affiliate_links.json';
                $registrationsFile = __DIR__ . '/../data/registrations.json';
                
                if (file_exists($affiliateLinksFile)) {
                    echo '<h4>üìÑ affiliate_links.json:</h4>';
                    $content = file_get_contents($affiliateLinksFile);
                    $formatted = json_encode(json_decode($content), JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE);
                    echo '<div class="json-display">' . htmlspecialchars($formatted) . '</div>';
                } else {
                    echo '<div class="error">‚ùå –§–∞–π–ª affiliate_links.json –Ω–µ –Ω–∞–π–¥–µ–Ω</div>';
                }
                
                if (file_exists($registrationsFile)) {
                    echo '<h4>üìÑ registrations.json:</h4>';
                    $content = file_get_contents($registrationsFile);
                    $formatted = json_encode(json_decode($content), JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE);
                    echo '<div class="json-display">' . htmlspecialchars($formatted) . '</div>';
                } else {
                    echo '<div class="error">‚ùå –§–∞–π–ª registrations.json –Ω–µ –Ω–∞–π–¥–µ–Ω</div>';
                }
                echo '</div>';
                
                // –°—Å—ã–ª–∫–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                $currentDomain = (isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] === 'on' ? "https" : "http") . "://" . $_SERVER['HTTP_HOST'];
                $basePath = dirname($_SERVER['REQUEST_URI']);
                
                echo '<div class="test-section">';
                echo '<div class="test-title">üîó –°—Å—ã–ª–∫–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è HTTP API</div>';
                echo '<div class="links">';
                echo '<strong>–¢–µ—Å—Ç–∏—Ä—É–π—Ç–µ API —á–µ—Ä–µ–∑ —ç—Ç–∏ —Å—Å—ã–ª–∫–∏:</strong><br><br>';
                echo '<a href="' . $currentDomain . $basePath . '/generate_link.php?telegram_id=' . $telegramId . '" target="_blank">üì± –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–æ–π —Å—Å—ã–ª–∫–∏</a>';
                echo '<a href="' . $currentDomain . $basePath . '/generate_signals_link.php?click_id=' . urlencode($clickId) . '&trader_id=' . urlencode($traderId) . '" target="_blank">üéØ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å–∏–≥–Ω–∞–ª—ã</a>';
                echo '<a href="' . $currentDomain . $basePath . '/signals.php?click_id=' . urlencode($clickId) . '&trader_id=' . urlencode($traderId) . '" target="_blank">üìä –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å —Å–∏–≥–Ω–∞–ª–∞–º–∏</a>';
                echo '<br><strong>–î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ—Å—Ç–±–µ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ POST –∑–∞–ø—Ä–æ—Å –∫:</strong><br>';
                echo '<code>' . $currentDomain . $basePath . '/postback.php</code>';
                echo '</div>';
                echo '</div>';
                
            } catch (Exception $e) {
                echo '<div class="test-section">';
                echo '<div class="error">‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤: ' . htmlspecialchars($e->getMessage()) . '</div>';
                echo '</div>';
            }
            
            ?>
        </div>
    </div>
</body>
</html> 